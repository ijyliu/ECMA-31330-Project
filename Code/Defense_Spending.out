==========================================
SLURM_JOB_ID = 2944838
SLURM_SUBMIT_DIR = /home/ijyliu/repo/ECMA-31330-Project/Code
SLURM_JOB_NODELIST = mcn25
==========================================
[NbConvertApp] Converting notebook Defense_Spending.ipynb to notebook
[NbConvertApp] Executing notebook with kernel: python3
Traceback (most recent call last):
  File "/apps/python/3.6/bin/jupyter-nbconvert", line 8, in <module>
    sys.exit(main())
  File "/home/ijyliu/.local/lib/python3.6/site-packages/jupyter_core/application.py", line 254, in launch_instance
    return super(JupyterApp, cls).launch_instance(argv=argv, **kwargs)
  File "/home/ijyliu/.local/lib/python3.6/site-packages/traitlets/config/application.py", line 664, in launch_instance
    app.start()
  File "/apps/python/3.6/lib/python3.6/site-packages/nbconvert/nbconvertapp.py", line 350, in start
    self.convert_notebooks()
  File "/apps/python/3.6/lib/python3.6/site-packages/nbconvert/nbconvertapp.py", line 524, in convert_notebooks
    self.convert_single_notebook(notebook_filename)
  File "/apps/python/3.6/lib/python3.6/site-packages/nbconvert/nbconvertapp.py", line 489, in convert_single_notebook
    output, resources = self.export_single_notebook(notebook_filename, resources, input_buffer=input_buffer)
  File "/apps/python/3.6/lib/python3.6/site-packages/nbconvert/nbconvertapp.py", line 418, in export_single_notebook
    output, resources = self.exporter.from_filename(notebook_filename, resources=resources)
  File "/apps/python/3.6/lib/python3.6/site-packages/nbconvert/exporters/exporter.py", line 181, in from_filename
    return self.from_file(f, resources=resources, **kw)
  File "/apps/python/3.6/lib/python3.6/site-packages/nbconvert/exporters/exporter.py", line 199, in from_file
    return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw)
  File "/apps/python/3.6/lib/python3.6/site-packages/nbconvert/exporters/notebook.py", line 32, in from_notebook_node
    nb_copy, resources = super().from_notebook_node(nb, resources, **kw)
  File "/apps/python/3.6/lib/python3.6/site-packages/nbconvert/exporters/exporter.py", line 143, in from_notebook_node
    nb_copy, resources = self._preprocess(nb_copy, resources)
  File "/apps/python/3.6/lib/python3.6/site-packages/nbconvert/exporters/exporter.py", line 318, in _preprocess
    nbc, resc = preprocessor(nbc, resc)
  File "/apps/python/3.6/lib/python3.6/site-packages/nbconvert/preprocessors/base.py", line 47, in __call__
    return self.preprocess(nb, resources)
  File "/apps/python/3.6/lib/python3.6/site-packages/nbconvert/preprocessors/execute.py", line 79, in preprocess
    self.execute()
  File "/apps/python/3.6/lib/python3.6/site-packages/nbclient/util.py", line 74, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/apps/python/3.6/lib/python3.6/site-packages/nbclient/util.py", line 53, in just_run
    return loop.run_until_complete(coro)
  File "/apps/python/3.6/lib/python3.6/asyncio/base_events.py", line 488, in run_until_complete
    return future.result()
  File "/apps/python/3.6/lib/python3.6/site-packages/nbclient/client.py", line 541, in async_execute
    cell, index, execution_count=self.code_cells_executed + 1
  File "/apps/python/3.6/lib/python3.6/site-packages/nbconvert/preprocessors/execute.py", line 123, in async_execute_cell
    cell, resources = self.preprocess_cell(cell, self.resources, cell_index)
  File "/apps/python/3.6/lib/python3.6/site-packages/nbconvert/preprocessors/execute.py", line 146, in preprocess_cell
    cell = run_sync(NotebookClient.async_execute_cell)(self, cell, index, store_history=self.store_history)
  File "/apps/python/3.6/lib/python3.6/site-packages/nbclient/util.py", line 74, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/apps/python/3.6/lib/python3.6/site-packages/nbclient/util.py", line 53, in just_run
    return loop.run_until_complete(coro)
  File "/home/ijyliu/.local/lib/python3.6/site-packages/nest_asyncio.py", line 70, in run_until_complete
    return f.result()
  File "/apps/python/3.6/lib/python3.6/asyncio/tasks.py", line 180, in _step
    result = coro.send(None)
  File "/apps/python/3.6/lib/python3.6/site-packages/nbclient/client.py", line 832, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "/apps/python/3.6/lib/python3.6/site-packages/nbclient/client.py", line 740, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply['content'])
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
deMeansipri_milex_per_gdp = sipri_milex_per_gdp - np.mean(sipri_milex_per_gdp, axis=0) 
modelsipri_milex_per_gdp = pca(n_components=deMeansipri_milex_per_gdp.shape[1])
resultssipri_milex_per_gdp = modelsipri_milex_per_gdp.fit_transform(deMeansipri_milex_per_gdp)
sns.heatmap(resultssipri_milex_per_gdp['loadings'],cmap='YlGnBu');
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mValueError[0m                                Traceback (most recent call last)
[0;32m<ipython-input-1-69a76e66673f>[0m in [0;36m<module>[0;34m[0m
[1;32m      1[0m [0mdeMeansipri_milex_per_gdp[0m [0;34m=[0m [0msipri_milex_per_gdp[0m [0;34m-[0m [0mnp[0m[0;34m.[0m[0mmean[0m[0;34m([0m[0msipri_milex_per_gdp[0m[0;34m,[0m [0maxis[0m[0;34m=[0m[0;36m0[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m      2[0m [0mmodelsipri_milex_per_gdp[0m [0;34m=[0m [0mpca[0m[0;34m([0m[0mn_components[0m[0;34m=[0m[0mdeMeansipri_milex_per_gdp[0m[0;34m.[0m[0mshape[0m[0;34m[[0m[0;36m1[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m----> 3[0;31m [0mresultssipri_milex_per_gdp[0m [0;34m=[0m [0mmodelsipri_milex_per_gdp[0m[0;34m.[0m[0mfit_transform[0m[0;34m([0m[0mdeMeansipri_milex_per_gdp[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m      4[0m [0msns[0m[0;34m.[0m[0mheatmap[0m[0;34m([0m[0mresultssipri_milex_per_gdp[0m[0;34m[[0m[0;34m'loadings'[0m[0;34m][0m[0;34m,[0m[0mcmap[0m[0;34m=[0m[0;34m'YlGnBu'[0m[0;34m)[0m[0;34m;[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/.local/lib/python3.6/site-packages/pca/pca.py[0m in [0;36mfit_transform[0;34m(self, X, row_labels, col_labels, verbose)[0m
[1;32m    200[0m         [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    201[0m             [0;32mif[0m [0mverbose[0m[0;34m>=[0m[0;36m3[0m[0;34m:[0m [0mprint[0m[0;34m([0m[0;34m'[pca] >The PCA reduction is performed on the [%.d] columns of the input dataframe.'[0m [0;34m%[0m[0;34m([0m[0mX[0m[0;34m.[0m[0mshape[0m[0;34m[[0m[0;36m1[0m[0;34m][0m[0;34m)[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 202[0;31m             [0mmodel_pca[0m[0;34m,[0m [0mPC[0m[0;34m,[0m [0mloadings[0m[0;34m,[0m [0mpercentExplVar[0m [0;34m=[0m [0m_explainedvar[0m[0;34m([0m[0mX[0m[0;34m,[0m [0mn_components[0m[0;34m=[0m[0mself[0m[0;34m.[0m[0mn_components[0m[0;34m,[0m [0monehot[0m[0;34m=[0m[0mself[0m[0;34m.[0m[0monehot[0m[0;34m,[0m [0mrandom_state[0m[0;34m=[0m[0mself[0m[0;34m.[0m[0mrandom_state[0m[0;34m,[0m [0mverbose[0m[0;34m=[0m[0mverbose[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    203[0m             [0mpcp[0m [0;34m=[0m [0mpercentExplVar[0m[0;34m[[0m[0mnp[0m[0;34m.[0m[0mminimum[0m[0;34m([0m[0mlen[0m[0;34m([0m[0mpercentExplVar[0m[0;34m)[0m [0;34m-[0m [0;36m1[0m[0;34m,[0m [0mself[0m[0;34m.[0m[0mn_components[0m[0;34m)[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m
[1;32m    204[0m [0;34m[0m[0m

[0;32m~/.local/lib/python3.6/site-packages/pca/pca.py[0m in [0;36m_explainedvar[0;34m(X, n_components, onehot, random_state, n_jobs, verbose)[0m
[1;32m   1009[0m [0;34m[0m[0m
[1;32m   1010[0m     [0;31m# Fit model[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1011[0;31m     [0mmodel[0m[0;34m.[0m[0mfit[0m[0;34m([0m[0mX[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1012[0m     [0;31m# Do the reduction[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1013[0m     [0;32mif[0m [0mverbose[0m[0;34m>=[0m[0;36m3[0m[0;34m:[0m [0mprint[0m[0;34m([0m[0;34m'[pca] >Computing loadings and PCs..'[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m/apps/python/3.6/lib/python3.6/site-packages/sklearn/decomposition/_pca.py[0m in [0;36mfit[0;34m(self, X, y)[0m
[1;32m    350[0m             [0mReturns[0m [0mthe[0m [0minstance[0m [0mitself[0m[0;34m.[0m[0;34m[0m[0;34m[0m[0m
[1;32m    351[0m         """
[0;32m--> 352[0;31m         [0mself[0m[0;34m.[0m[0m_fit[0m[0;34m([0m[0mX[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    353[0m         [0;32mreturn[0m [0mself[0m[0;34m[0m[0;34m[0m[0m
[1;32m    354[0m [0;34m[0m[0m

[0;32m/apps/python/3.6/lib/python3.6/site-packages/sklearn/decomposition/_pca.py[0m in [0;36m_fit[0;34m(self, X)[0m
[1;32m    396[0m [0;34m[0m[0m
[1;32m    397[0m         X = self._validate_data(X, dtype=[np.float64, np.float32],
[0;32m--> 398[0;31m                                 ensure_2d=True, copy=self.copy)
[0m[1;32m    399[0m [0;34m[0m[0m
[1;32m    400[0m         [0;31m# Handle n_components==None[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m

[0;32m/apps/python/3.6/lib/python3.6/site-packages/sklearn/base.py[0m in [0;36m_validate_data[0;34m(self, X, y, reset, validate_separately, **check_params)[0m
[1;32m    419[0m             [0mout[0m [0;34m=[0m [0mX[0m[0;34m[0m[0;34m[0m[0m
[1;32m    420[0m         [0;32melif[0m [0misinstance[0m[0;34m([0m[0my[0m[0;34m,[0m [0mstr[0m[0;34m)[0m [0;32mand[0m [0my[0m [0;34m==[0m [0;34m'no_validation'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 421[0;31m             [0mX[0m [0;34m=[0m [0mcheck_array[0m[0;34m([0m[0mX[0m[0;34m,[0m [0;34m**[0m[0mcheck_params[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    422[0m             [0mout[0m [0;34m=[0m [0mX[0m[0;34m[0m[0;34m[0m[0m
[1;32m    423[0m         [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m/apps/python/3.6/lib/python3.6/site-packages/sklearn/utils/validation.py[0m in [0;36minner_f[0;34m(*args, **kwargs)[0m
[1;32m     61[0m             [0mextra_args[0m [0;34m=[0m [0mlen[0m[0;34m([0m[0margs[0m[0;34m)[0m [0;34m-[0m [0mlen[0m[0;34m([0m[0mall_args[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m     62[0m             [0;32mif[0m [0mextra_args[0m [0;34m<=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 63[0;31m                 [0;32mreturn[0m [0mf[0m[0;34m([0m[0;34m*[0m[0margs[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     64[0m [0;34m[0m[0m
[1;32m     65[0m             [0;31m# extra_args > 0[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m

[0;32m/apps/python/3.6/lib/python3.6/site-packages/sklearn/utils/validation.py[0m in [0;36mcheck_array[0;34m(array, accept_sparse, accept_large_sparse, dtype, order, copy, force_all_finite, ensure_2d, allow_nd, ensure_min_samples, ensure_min_features, estimator)[0m
[1;32m    662[0m         [0;32mif[0m [0mforce_all_finite[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    663[0m             _assert_all_finite(array,
[0;32m--> 664[0;31m                                allow_nan=force_all_finite == 'allow-nan')
[0m[1;32m    665[0m [0;34m[0m[0m
[1;32m    666[0m     [0;32mif[0m [0mensure_min_samples[0m [0;34m>[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m/apps/python/3.6/lib/python3.6/site-packages/sklearn/utils/validation.py[0m in [0;36m_assert_all_finite[0;34m(X, allow_nan, msg_dtype)[0m
[1;32m    104[0m                     [0mmsg_err[0m[0;34m.[0m[0mformat[0m[0;34m[0m[0;34m[0m[0m
[1;32m    105[0m                     (type_err,
[0;32m--> 106[0;31m                      msg_dtype if msg_dtype is not None else X.dtype)
[0m[1;32m    107[0m             )
[1;32m    108[0m     [0;31m# for object dtype data, we only check for NaNs (GH-13254)[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m

[0;31mValueError[0m: Input contains NaN, infinity or a value too large for dtype('float64').
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').

